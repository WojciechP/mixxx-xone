
interface Connection {
    trigger(): void
}

interface Engine {
    getValue<Key extends keyof GroupControlMap>(group: GroupControlMap[Key], key: Key): number
    setValue<Key extends keyof GroupControlMap>(group: GroupControlMap[Key], key: Key, v: number): void
    makeConnection<Key extends keyof GroupControlMap>(group: GroupControlMap[Key], key: Key, h: (val: number, group: GroupControlMap[Key], key: Key) => void): Connection
    trigger<Key extends keyof GroupControlMap>(group: GroupControlMap[Key], key: Key): void
    beginTimer(ms: number, h: () => void, oneShot?: boolean): void
    softTakeover<Key extends keyof GroupControlMap>(group: GroupControlMap[Key], key: Key, on: boolean): void
    softTakeoverIgnoreNextValue<Key extends keyof GroupControlMap>(group: GroupControlMap[Key], key: Key): void
}
declare const engine: Engine
declare var print: (thing: {}) => void

type DeckGroup = '[Channel1]' | '[Channel2]' | '[Channel3]' | '[Channel4]' | '[PreviewDeck1]'
type EqGroup = `[EqualizerRack1_${DeckGroup}_Effect1]`

type UpToFour = '1'|'2'|'3'|'4';
type FXUnitGroup =`[EffectRack${UpToFour}_EffectUnit${UpToFour}]`;
type FXUnitKey = `group_${DeckGroup}_enable` | `super1`;


type GroupControlMap = {
    [ctrl in DeckControlKey]: DeckGroup
} & {
        [ctrl in PlaylistKey]: '[Playlist]'
    } & {
        [ctrl in AutoDJKey]: '[AutoDJ]'
    } & {
        [ctrl in MasterKey]: '[Master]'
    } & {
        [ctrl in EqControlKey]: EqGroup
    } & {
        [ctrl in FXUnitKey]: FXUnitGroup
    };


interface MIDI {
    sendShortMsg(ch: number, ctrl: number, val: number): void
}
declare const midi: MIDI


type PlaylistKey = 'AutoDjAddTop' | 'AutoDjAddBottom' | 'SelectNextPlaylist' | 'SelectPrevPlaylist' | 'ToggleSelectedSidebarItem' | 'SelectTrackKnob'
type AutoDJKey = 'enabled' | 'fade_now'
type MasterKey = 'crossfader' | 'headGain'
type EqControlKey = 'parameter1' | 'parameter2' | 'parameter3'

type DeckControlKey =
    'back'
    | 'beat_active'
    | 'beat_closest'
    | 'beat_distance'
    | 'beatjump'
    | 'beatjump_backward'
    | 'beatjump_forward'
    | 'beatjump_size'
    | 'beatjump_X_backward'
    | 'beatjump_X_forward'
    | 'beatloop'
    | 'beatloop_activate'
    | 'beatloop_size'
    | 'beatloop_X'
    | 'beatloop_X_activate'
    | 'beatloop_X_enabled'
    | 'beatloop_X_toggle'
    | 'beatlooproll_activate'
    | 'beatlooproll_X_activate'
    | 'beats_adjust_faster'
    | 'beats_adjust_slower'
    | 'beats_translate_curpos'
    | 'beats_translate_earlier'
    | 'beats_translate_later'
    | 'beats_translate_match_alignment'
    | 'beatsync'
    | 'beatsync_phase'
    | 'beatsync_tempo'
    | 'bpm'
    | 'bpm_tap'
    | 'CloneFromDeck'
    | 'CloneFromSampler'
    | 'cue_cdj'
    | 'cue_clear'
    | 'cue_default'
    | 'cue_goto'
    | 'cue_gotoandplay'
    | 'cue_gotoandstop'
    | 'cue_indicator'
    | 'cue_mode'
    | 'cue_play'
    | 'cue_point'
    | 'cue_preview'
    | 'cue_set'
    | 'cue_simple'
    | 'duration'
    | 'eject'
    | 'end'
    | 'end_of_track'
    | 'file_bpm'
    | 'file_key'
    | 'filter'
    | 'filterDepth'
    | 'filterHigh'
    | 'filterHighKill'
    | 'filterLow'
    | 'filterLowKill'
    | 'filterMid'
    | 'filterMidKill'
    | 'flanger'
    | 'fwd'
    | 'Hercules1'
    | 'Hercules2'
    | 'Hercules3'
    | 'Hercules4'
    | 'hotcue_focus'
    | 'hotcue_focus_color_next'
    | 'hotcue_focus_color_prev'
    | 'hotcue_X_activate'
    | 'hotcue_X_clear'
    | 'hotcue_X_color'
    | 'hotcue_X_enabled'
    | 'hotcue_X_goto'
    | 'hotcue_X_gotoandplay'
    | 'hotcue_X_gotoandstop'
    | 'hotcue_X_position'
    | 'hotcue_X_set'
    | 'intro_end_activate'
    | 'intro_end_clear'
    | 'intro_end_enabled'
    | 'intro_end_position'
    | 'intro_end_set'
    | 'intro_start_activate'
    | 'intro_start_clear'
    | 'intro_start_enabled'
    | 'intro_start_position'
    | 'intro_start_set'
    | 'jog'
    | 'key'
    | 'keylock'
    | 'LoadSelectedTrack'
    | 'LoadSelectedTrackAndPlay'
    | 'local_bpm'
    | 'loop_double'
    | 'loop_enabled'
    | 'loop_end_position'
    | 'loop_halve'
    | 'loop_in'
    | 'loop_in_goto'
    | 'loop_move'
    | 'loop_move_X_backward'
    | 'loop_move_X_forward'
    | 'loop_out'
    | 'loop_out_goto'
    | 'loop_scale'
    | 'loop_start_position'
    | 'mute'
    | 'NextTask'
    | 'NextTrack'
    | 'orientation'
    | 'orientation_center'
    | 'orientation_left'
    | 'orientation_right'
    | 'outro_end_activate'
    | 'outro_end_clear'
    | 'outro_end_enabled'
    | 'outro_end_position'
    | 'outro_end_set'
    | 'outro_start_activate'
    | 'outro_start_clear'
    | 'outro_start_enabled'
    | 'outro_start_position'
    | 'outro_start_set'
    | 'passthrough'
    | 'PeakIndicator'
    | 'PeakIndicatorL'
    | 'PeakIndicatorR'
    | 'pfl'
    | 'pitch'
    | 'pitch_adjust'
    | 'pitch_down'
    | 'pitch_up'
    | 'play'
    | 'play_indicator'
    | 'play_latched'
    | 'play_stutter'
    | 'playposition'
    | 'pregain'
    | 'PrevTask'
    | 'PrevTrack'
    | 'quantize'
    | 'rate'
    | 'rate_dir'
    | 'rate_perm_down'
    | 'rate_perm_down_small'
    | 'rate_perm_up'
    | 'rate_perm_up_small'
    | 'rate_temp_down'
    | 'rate_temp_down_small'
    | 'rate_temp_up'
    | 'rate_temp_up_small'
    | 'rateEngine'
    | 'rateRange'
    | 'rateSearch'
    | 'reloop_andstop'
    | 'reloop_exit'
    | 'reloop_toggle'
    | 'repeat'
    | 'reset_key'
    | 'reverse'
    | 'reverseroll'
    | 'scratch'
    | 'scratch2'
    | 'scratch2_enabled'
    | 'slip_enabled'
    | 'stars_down'
    | 'stars_up'
    | 'start'
    | 'start_play'
    | 'start_stop'
    | 'stop'
    | 'sync_enabled'
    | 'sync_key'
    | 'sync_master'
    | 'sync_mode'
    | 'track_color'
    | 'track_loaded'
    | 'track_samplerate'
    | 'track_samples'
    | 'transform'
    | 'vinylcontrol_cueing'
    | 'vinylcontrol_enabled'
    | 'vinylcontrol_mode'
    | 'vinylcontrol_status'
    | 'visual_bpm'
    | 'visual_key'
    | 'visual_key_distance'
    | 'volume'
    | 'VuMeter'
    | 'VuMeterL'
    | 'VuMeterR'
    | 'waveform_zoom'
    | 'waveform_zoom_down'
    | 'waveform_zoom_set_default'
    | 'waveform_zoom_up'
    | 'wheel';

